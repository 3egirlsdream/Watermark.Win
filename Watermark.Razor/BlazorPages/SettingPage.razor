@page "/settings"
@using Masa.Blazor.Presets.PageStack.NavController
@using Watermark.Razor.Components
@using Watermark.Razor.Parts
@using Watermark.Shared.Models
@using Components.Layout
@using Watermark.Shared.Enums
@inject IPopupService PopupService
@inject PageStackNavController NavController
@layout MainLayout
@inject IClientInstance ClientInstance
@inherits PStackPageBase

<style>
    .mud-overlay .mud-overlay-content {
        width: 60%;
    }

    .mud-switch {
        margin-left: 0px;
        margin-right: 0px;
        margin-inline-start: 0px;
        margin-inline-end: 0px;
        margin-right: 0px;
    }

</style>
<MToolbar Dense Flat>
    <div style="display:flex;flex-direction:column;">
        <span>我的</span>
        <div style="height:2px;border-radius:4px;" class="primary"></div>
    </div>
</MToolbar>
@if (Global.CurrentUser != null && !string.IsNullOrEmpty(Global.CurrentUser.ID))
{
    <MCard Style="@($"padding:10px;margin:10px 16px 20px 16px;background:{Colors.Grey.Lighten4}")" Flat>
        <div style="display:flex;align-items:center;justify-content: flex-start">
            @if (!string.IsNullOrEmpty(Global.CurrentUser.IMG))
            {
                <MAvatar Height="50" Width="50">
                    <MImage Src="@Global.CurrentUser.IMG"></MImage>
                </MAvatar>
            }
            else
            {
                <MIcon Color="primary" Style="float:left;">@ICONS.Account</MIcon>
            }


            <div style="display: flex; align-items: flex-start;flex-direction: column;justify-content: center;" class="ml-2">
                <p class="font-weight-medium" style="@($"color:{(Global.CurrentUser.IsVIP ? "orange" : "black")};display:flex;align-items:center;margin:0px")">
                    @Global.CurrentUser.DISPLAY_NAME
                    @if (Global.CurrentUser.IsVIP && Global.DeviceType != DeviceType.IOS)
                    {
                        <Watermark.Razor.Parts.IconVip />
                    }
                    else if (Global.DeviceType != DeviceType.IOS)
                    {
                        <MButton Outlined Class="ml-5" Small OnClick="OpenVip">开通会员</MButton>
                    }
                </p>
                <p class="font-weight-light ma-0">@Global.CurrentUser.USER_NAME</p>
            </div>
        </div>

        @if (Global.DeviceType != DeviceType.IOS)
        {
            <div Style="display:flex;align-items:center;line-height: 32px;">
                <Watermark.Razor.Parts.IconCoin />
                <Label Name="@(Global.CurrentUser.COINS + "")" />
                <Label Name="@($"会员到期时间：{Global.CurrentUser.EXPIRE_DATE}")" Class="ml-4" />
            </div>
        }
    </MCard>
}
else
{
    <MCard Style="@($"padding:10px;{cardStyle}")" Flat>
        <Row>
            <MButton OnClick="@(() => NavController.Push("/login"))" Text>登录</MButton>
            <MButton OnClick="@(() => NavController.Push("/signup/0"))" Text>注册</MButton>
        </Row>
    </MCard>
}

@* 活动面板 *@
@* <MudPaper Style="@cardStyle" Elevation="0" class="pa-3">
	<MudCarousel Class="mud-width-full" Style="height:100px;" ShowArrows="false" ShowBullets="false" EnableSwipeGesture="true" AutoCycle="true" TData="object">
		<MudCarouselItem Transition="@Transition.Fade">
			<div class="d-flex" style="height:100%">
				<MudImage Src="https://cdn.thankful.top/gonggao.jpg" ObjectFit="ObjectFit.Contain" Class="mx-auto" />
			</div>
		</MudCarouselItem>
		<MudCarouselItem Transition="@Transition.Fade">
			<div class="d-flex" style="height:100%">
				<MudImage Src="https://cdn.thankful.top/yaofan.jpg" ObjectFit="ObjectFit.Contain" Class="mx-auto" />
			</div>
		</MudCarouselItem>
	</MudCarousel>
</MudPaper> *@


<MCard Style="@cardStyle" Flat class="pa-3">
    <SettingPanel OnClick="Update" Icon="@ICONS.ArrowRight">
        <Row style="align-items: center">
            @($"当前版本{ClientInstance.GetVersion().ToString()}")
            @if (checkUpdate)
            {
                <MChip Small Color="error">new</MChip>
            }
        </Row>
    </SettingPanel>
    @if (DownLoadProgress > 0)
    {
        <MProgressLinear Color="primary" Value="@DownLoadProgress" Class="mr-5" style="width:auto" />
    }
</MCard>

<MCard Flat Style="@cardStyle" Class="pa-3">
    <SettingPanel OnClick="() => openLogoDialog = true" Text="导入图标" Icon="@ICONS.ArrowRight" />
    @* <MudDivider Class="my-2" />
    <MudStack Row Justify="Justify.SpaceBetween" style="align-items: center" @onclick="@(()=>CopyClipboard("http://thankful.top:2038/api/public/dl/EMRyVNXX"))">
        <MudText Typo="Typo.button"> PC客户端 </MudText>
        <MudIcon Icon="@Icons.Material.Filled.ContentCopy" Size="Size.Small" />
    </MudStack>

    <MudDivider Class="my-2" />
    <MudStack Row Justify="Justify.SpaceBetween" style="align-items: center">
        <MudText Typo="Typo.button"><a href="http://thankful.top/"> Web网页版</a></MudText>
        <MudIcon Icon="@Icons.Material.Filled.ArrowRight" Size="Size.Small" />
    </MudStack> *@

    <MDivider Class="my-2" />
    <SettingPanel OnClick="@(()=>CopyClipboard("836325187"))" Text="交流群：836325187" Icon="@ICONS.ArrowRight" />
    <MDivider Class="my-2" />
    <SettingPanel OnClick="()=>ShowQuestion = true" Text="常见问题" Icon="@ICONS.ArrowRight" />
</MCard>

<MCard Style="@cardStyle" Flat Class="pa-3">
    <SettingPanel OnClick="()=> { Global.CurrentUser = new(); }" Text="切换账号" Icon="@ICONS.Exit" />
    <MDivider Class="my-2" />
    <SettingPanel OnClick="OpenSettings" Text="设置" Icon="@ICONS.Setting" />
    @if (Global.CurrentUser?.ID == "0BECCA9A-6F10-4A88-8753-921195D08853" || Global.CurrentUser?.ID == "9DEBF7DC-F58C-4667-BACF-A6BFD18352EB")
    {
        <MDivider Class="my-2" />
        <SettingPanel OnClick="@(()=>NavController.Push("/dms"))" Text="数据" Icon="@ICONS.ArrowRight" />
    }
</MCard>

<MBottomSheet @bind-Value="@openVip" ContentStyle="height:60%;">
    <MSheet Style="height:100%;overflow:auto">
        <VipDialog OnImageTouched="OnImageTouched" />
    </MSheet>
</MBottomSheet>



<MBottomSheet @bind-Value="@openLogoDialog" ContentStyle="height:60%;">
    <MSheet Style="height:100%;overflow:auto">
        <Watermark.Razor.Components.LogoDialogContent />
    </MSheet>
</MBottomSheet>

<MBottomSheet @bind-Value="@ShowQuestion" ContentStyle="height:60%;">
    <MSheet Style="height:100%;overflow:auto">
        <Watermark.Razor.Components.QuestionDialog />
    </MSheet>
</MBottomSheet>

<MOverlay @bind-Value="@showUpdateOverlay" Absolute="true" ZIndex="99999">
    <Watermark.Razor.Components.UpdateDialog CloseEvet="()=>showUpdateOverlay = false" UpdateEvet="Update" DownLoadProgress="DownLoadProgress" UpdateMessage="@ClientInstance.UpdateMessage" UpdateVersion="@ClientInstance.UpdateVersion" />
</MOverlay>

@code {
    string cardStyle => $"margin:20px 16px;background:{Colors.Grey.Lighten4}";
    bool openVip = false;
    bool checkUpdate = false;
    int DownLoadProgress = 0;
    bool openLogoDialog = false;
    bool showUpdateOverlay = false;
    bool ShowQuestion = false;
    bool ShowUserInfo = false;

    protected override async Task OnInitializedAsync()
    {
        checkUpdate = await ClientInstance.CheckUpdate();
        if (checkUpdate)
        {
            showUpdateOverlay = true;
        }
        NavController.PageClosed += (e, v) =>
        {
            ClientInstance.SetColor("#FFFFFF");
            if (v.RelativeUri == @"/login")
            {
                ClientInstance.ReLogin();
            }
            else if (v.RelativeUri == @"/appsetting")
            {
                StateHasChanged();
            }
            else if (v.RelativeUri == @"/signup")
            {
                ClientInstance.ReLogin();
            }
            StateHasChanged();
        };
    }

    async void Update()
    {
        ClientInstance.Haptic();
        if (!checkUpdate || DownLoadProgress > 0) return;
        await ClientInstance.Update(DownloadProgressChanged);
        DownLoadProgress = 0;
        StateHasChanged();

    }


    private void DownloadProgressChanged(long readLength, long allLength)
    {
        InvokeAsync(() =>
        {
            var c = (int)(readLength * 100 / allLength);

            if (c > 0 && c % 5 == 0) //刷新进度为每5%更新一次，过快的刷新会导致页面显示数值与实际不一致
            {
                DownLoadProgress = c; //下载完成百分比
                StateHasChanged();
            }
        });
    }


    async void CopyClipboard(string uri)
    {
        await ClientInstance.SetTextAsync(uri);
        Common.ShowMsg(PopupService, "已复制到剪贴板", AlertTypes.Success);
    }

    private void NavControllerOnPageClosed(object? sender, PageStackPageClosedEventArgs e)
    {
        Console.Out.WriteLine($"{e.RelativeUri} closed");
    }

    void OpenLoginDialog()
    {
        NavController.Push("/login");
    }

    void OnImageTouched(bool f)
    {
        openVip = false;
        StateHasChanged();
    }

    void OpenVip()
    {
        ClientInstance.Haptic();
        openVip = true;
    }

    void OpenSettings()
    {
        NavController.Push("/appsetting");
        ClientInstance.SetColor();
    }
}