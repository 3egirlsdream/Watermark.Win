@using Masa.Blazor
@using Microsoft.AspNetCore.Components.Forms
@using System.IO
@using Watermark.Razor.Parts
@using Watermark.Shared.Models
@using Watermark.Win.Models
@using Microsoft.AspNetCore.Components
@using System.ComponentModel.DataAnnotations
@inject WMDesignFunc design
<style>
    .container {
        display: flex;
        flex-wrap: wrap;
        justify-content: flex-start;
        padding: 10px;
    }

    .rectangle {
        position: relative;
        width: calc(20% - 20px); /* 每个矩形宽度为20%，减去20px的间距 */
        /* padding-bottom: calc(20% - 20px); /* 确保每个矩形的高度与宽度相等 */
        margin-right: 20px; /* 设置右侧间距 */
        margin-bottom: 20px; /* 设置下方间距 */
    }

        .rectangle .mud-input-control {
            margin-top: 0px;
        }

        .rectangle .mud-input-control-input-container {
            position: absolute;
            height: 100%;
            width: 100%;
        }

        .rectangle img {
            /* position: absolute; */
            width: 100%;
            height: 100%;
            object-fit: contain; /* 图片填充整个矩形 */
        }
</style>

<div class="container">
    <div class="rectangle" style="border: 1px dashed #e3e3e3;border-radius: 5px;text-align: center;">
        <IconButton Icon="@ICONS.Add" OnClick="ImportLocalFont" />
    </div>
    @foreach (var per in Fonts)
    {
        <div class="rectangle">
            <MImage Contain Src="@per.Value" @onclick="()=>Click(per)" Class="rounded-lg" />
        </div>
    }
</div>


@code {
    [Parameter]
    public string ID { get; set; }
    public EventCallback<KeyValuePair<string, string>> OnClose { get; set; }

    Dictionary<string, string> Fonts = new Dictionary<string, string>();
    void Click(KeyValuePair<string, string> pair)
    {
        if(OnClose.HasDelegate)
        {
            OnClose.InvokeAsync(pair);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        Fonts = await Task.Run(()=> Global.ReadFont());
    }

    async void ImportLocalFont()
    {
        if (design == null) return;
        await design.ImportFontEvt2.Invoke(ID);
        Fonts = await Task.Run(() => Global.ReadFont());
        StateHasChanged();
    }

}