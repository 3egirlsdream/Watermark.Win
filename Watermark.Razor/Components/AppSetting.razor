@page "/appsetting"
@using Masa.Blazor.Presets
@using Watermark.Razor.Components.Layout
@using Watermark.Razor.Parts
@using Watermark.Shared.Models
@using Masa.Blazor
@layout MainLayout
@inject APIHelper api 
@inject IPopupService PopupService
@inherits PStackPageBase
@inject IClientInstance ClientInstance
@inject PageStackNavController NavController

<PStackPageBarInit Title="设置" Dense Flat CenterTitle>
</PStackPageBarInit>

<div Style="text-align:center">
    <MCard Flat Style="@cardStyle" Elevation="0" Class="pa-3">
        <MBottomSheet @bind-Value="sheet">
            <ActivatorContent>
                <div class="d-space-between" @onclick="@(() => NavController.Push("/logout"))">
                    <Label Small="false" Name="注销账号"/>
                    <MIcon Small>@ICONS.Delete</MIcon>
                </div>
            </ActivatorContent>
            <ChildContent>
                <MSheet Class="text-center px-2" Height="220">
                    <MTextField @bind-Value="UserName" TValue="string" Label="邮箱" Required="true" RequiredMessage="邮箱不能为空" Autofocus Class="mt-10" />
                    <MTextField @bind-Value="Password" TValue="string" Label="密码" Required="true" RequiredMessage="密码不能为空" Class="mt-5" Type="password" />
                    <MButton Elevation="0" OnClick="DeleteAccount" Width="@("100%")" Class="mt-5">注销</MButton>
                </MSheet>
            </ChildContent>
        </MBottomSheet>
    </MCard>
    <MCard Flat Style="@cardStyle" Elevation="0" Class="pa-3">
        <div class="d-space-between">
            <Label Small="false" Name="增强EXIF解析" />
            <MSwitch @bind-Value="@Global.SECOND_EXIF" Color="primary" HideDetails="true" Dense/>
        </div>
    </MCard>
    <MCard Flat Style="@cardStyle" Elevation="0" Class="pa-3">
        <div class="d-space-between" @onclick="()=> DeleteCache(Global.AppPath.TemplatesFolder)">
            <Label Small="false" Name="下载缓存" />
            <MIcon Small>@ICONS.Delete</MIcon>
        </div>

        <MDivider Class="my-2" />
        <div class="d-space-between" @onclick="()=> DeleteCache(Global.AppPath.LogoesFolder)">
            <Label Small="false" Name="图标缓存" />
            <MIcon Small>@ICONS.Delete</MIcon>
        </div>
    </MCard>

</div>




@code {
    [Parameter]
    public EventCallback<bool> CloseEvent { get; set; }
    string UserName { get; set; }
    string Password { get; set; }
    bool Loading = false;
    bool sheet;
    string cardStyle => $"margin:20px 16px;background:{Colors.Grey.Lighten4}";

    protected override void OnInitialized()
    {
        ClientInstance.SetColor();
    }

    public async void LoginOK()
    {
        Loading = true;
        APIHelper helper = new APIHelper();
        var result = await helper.LoginIn(UserName, Password);
        string message = "";
        AlertTypes severity = AlertTypes.Success;
        if (result.success)
        {
            Global.CurrentUser = Global.SetUserInfo(result.data.data);
            message = "登录成功";
            severity = AlertTypes.Success;
            await Global.WriteAccount2LocalAsync(UserName, helper.GetMD5(Password));
            if (CloseEvent.HasDelegate) await CloseEvent.InvokeAsync(true);
            StateHasChanged();
        }
        else
        {
            severity = AlertTypes.Error;
            message = result.message?.content ?? result.data.Message;
        }

        Common.ShowMsg(PopupService, message, severity);
        Loading = false;
        StateHasChanged();
    }

    void DeleteCache(string p)
    {
        if (Directory.Exists(p))
        {
            Directory.Delete(p, true);
            Common.ShowMsg(PopupService, "清除完成", AlertTypes.Success);
        }
    }

    void DeleteAccount()
    {
        NavController.Push("/logout");
    }
}


<style scoped>
    .d-space-between {
        align-items: center;
        display: flex;
        justify-content: space-between;
    }
</style>