@using Microsoft.JSInterop
@using MudBlazor
@using System.Collections.Concurrent
@using Watermark.Win.Models
@inject ISnackbar Snackbar
@inject IJSRuntime JSRuntime

<MudDialog Style="max-width:400px;">
    <DialogContent>
        <MudForm>
            <MudTextField @bind-Value="TemplateName" T="string" Label="模板名称" Required="true" RequiredError="模板名称不能为空" />
            <MudStack Row Class="mt-5">
                @if (!string.IsNullOrEmpty(Base64Src))
                {
                    <MudImage Width="250" ObjectFit="ObjectFit.Contain" Src="@Base64Src" />
                }
                <MudIconButton Icon="@Icons.Material.Filled.OpenInNew" OnClick="SelectExampleImage" Style="float:right;width:40px;height:40px;" />
            </MudStack>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton FullWidth="true" Variant="Variant.Filled" OnClick="OK">
            @if (_processing)
            {
                <MudProgressCircular Size="Size.Small" Indeterminate="true" />
            }
            else
            {
                <MudText Typo="Typo.button">确定</MudText>
            }
        </MudButton>
    </DialogActions>
</MudDialog>




@code {
    [Inject]
    private IDialogService DialogService { get; set; }
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }
    [Parameter]
    public Action<WMCanvas> Ok { get; set; }
    [Parameter]
    public Func<Task<string>> SelectDefaultImageAction { get; set; }
    [Parameter]
    public string ID { get; set; }

    bool _processing = false;
    string TemplateName;
    string Base64Src;
    void OK()
    {
        if (string.IsNullOrEmpty(TemplateName) || string.IsNullOrEmpty(Base64Src)) return;
        var canvas = new WMCanvas() { Name = TemplateName, ID = ID };
        var basePath = Global.AppPath.TemplatesFolder + canvas.ID;
        if (!Directory.Exists(basePath))
        {
            Directory.CreateDirectory(basePath);
        }
        Ok?.Invoke(canvas);
        MudDialog.Close();
    }

    async void SelectExampleImage()
    {
        if (SelectDefaultImageAction is null) return;
        var p = await SelectDefaultImageAction!.Invoke();
        if (string.IsNullOrEmpty(p)) return;
        _processing = true;
        StateHasChanged();
        var dic = new ConcurrentDictionary<string, byte[]>();
        var destFolder = Global.AppPath.TemplatesFolder + ID;
        if (!System.IO.Directory.Exists(destFolder))
        {
            System.IO.Directory.CreateDirectory(destFolder);
        }

        var name = p.Substring(p.LastIndexOf('\\') + 1);
        var destFile = destFolder + System.IO.Path.DirectorySeparatorChar + "default.jpg";
        await Task.Run(() =>
        {
            Global.ImageFile2Base64(dic, p, "default");
            SkiaSharp.SKBitmap bitmap = SkiaSharp.SKBitmap.Decode(p);
            Global.WriteThumbnailImage(bitmap, destFile);
        });

        Base64Src = await JSRuntime.InvokeAsync<string>("byteToUrl", dic.First().Value);
        _processing = false;
        StateHasChanged();
    }
}