@using System.Collections.Concurrent
@using Masa.Blazor
@using Watermark.Shared.Enums
@using Watermark.Shared.Models
@using Watermark.Win.Models
@using Watermark.Razor.Parts

@foreach (var container in canvas.Children)
{
    <ExpandVisiblePanel Desc="@container.Name" @bind-Visible="container.Enabled" Class="ma-1 pa-1" Color="@ICONS.Colors.Gray.Light1" Bold="true">
        <ExpandPanel Desc="图片" ShowSwitch="false" Expanded="true" Rounded="false" Class="my-1 pa-1" Color="@ICONS.Colors.Gray.Light2">
            @if (canvas.CanvasType == CanvasType.Split)
            {
                <div style="align-items: center;display:flex;height: 36px" class="mx-1">
                    <Label Name="固定图片"></Label>
                    <MSwitch @bind-Value="@container.ContainerProperties.FixImage" Color="primary" Class="mx-1" />
                </div>
            }
            <ImageSelect ImagesBase64="ImagesBase64" Key="@container.ID" Delete="() => RemoveImage(container)" Size="250" SelectDefaultImage="()=> SelectImage(container)" Simple="true" />
            <ColorPicker Name="背景颜色" @bind-Color="@container.BackgroundColor" />
        </ExpandPanel>
        <ExpandPanel @bind-Expanded="container.ContainerProperties.EnableShadow" Desc="阴影" Class="my-1" Color="@ICONS.Colors.Gray.Light2">
            <ColorPicker Name="颜色" @bind-Color="container.ContainerProperties.ShadowColor" />
            <SliderInput @bind-Value="@container.ContainerProperties.ShadowRange" Name="深度" />
        </ExpandPanel>
        <ExpandPanel @bind-Expanded="container.ContainerProperties.EnableRadius" Desc="圆角" Class="my-1" Color="@ICONS.Colors.Gray.Light2">
            <SliderInput @bind-Value="@container.ContainerProperties.CornerRadius" Name="度数" />
        </ExpandPanel>
        <ExpandPanel ShowSwitch="false" Desc="旋转角度" Expanded="true" Color="@ICONS.Colors.Gray.Light2">
            <SliderInput @bind-Value="@container.Angle" />
        </ExpandPanel>
        <ExpandPanel Desc="容器内组件水平对齐" ShowSwitch="false" Class="my-1" Expanded="true" Color="@ICONS.Colors.Gray.Light2">
            <ButtonGroup Type="ButtonGroup.GroupItemType.LeftCenterRight" Value="(int)container.HorizontalAlignment" ValueChanged="(e) => container.HorizontalAlignment = (HorizontalAlignment)e" />
        </ExpandPanel>
        <ExpandPanel Desc="容器内组件竖直对齐" ShowSwitch="false" Class="my-1" Expanded="true" Color="@ICONS.Colors.Gray.Light2">
            <ButtonGroup Type="ButtonGroup.GroupItemType.TopCenterBottom" Value="(int)container.VerticalAlignment" ValueChanged="(e) => container.VerticalAlignment = (VerticalAlignment)e" />
        </ExpandPanel>

        <ExpandPanel Desc="容器内组件堆叠方向" ShowSwitch="false" Class="my-1" Expanded="true" Color="@ICONS.Colors.Gray.Light2">
            <ButtonGroup Type="ButtonGroup.GroupItemType.HorizonVertical" Value="(int)container.Orientation" ValueChanged="(e) => container.Orientation = (Orientation)e" />
        </ExpandPanel>

        <ExpandPanel Desc="容器依靠方向" ShowSwitch="false" Class="my-1" Expanded="true" Color="@ICONS.Colors.Gray.Light2">
            <ButtonGroup Type="ButtonGroup.GroupItemType.TBLR" Value="(int)container.ContainerAlignment" ValueChanged="(e) => container.ContainerAlignment = (ContainerAlignment)e" />
        </ExpandPanel>
        <ExpandPanel ShowSwitch="false" Desc="边距和比例" Class="my-1" Expanded="true" Color="@ICONS.Colors.Gray.Light2">
            <SliderInput @bind-Value="@container.Margin.Top" Name="上边距" Unit="%" />
            <SliderInput @bind-Value="@container.Margin.Bottom" Name="下边距" Unit="%" />
            <SliderInput @bind-Value="@container.Margin.Left" Name="左边距" Unit="%" />
            <SliderInput @bind-Value="@container.Margin.Right" Name="右边距" Unit="%" />
            <SliderInput @bind-Value="@container.HeightPercent" Name="高" Unit="%" />
            <SliderInput @bind-Value="@container.WidthPercent" Name="宽" Unit="%" />
        </ExpandPanel>
        @* <ExpandVisiblePanel Desc="组件设置" ShowIcon="false" Color="@ICONS.Colors.Gray.Light2"> *@
        @foreach (var ctrl in container.Controls)
        {
            @if (ctrl is WMContainer mContainer)
            {
                <ExpandVisiblePanel Desc="@mContainer.Name" ShowIcon="false" Color="@ICONS.Colors.Gray.Light2" Class="pa-1 my-1" Bold="true">
                    <ExpandPanel Desc="容器内组件水平对齐" ShowSwitch="false" Expanded="true" Color="@ICONS.Colors.Gray.Light3" Class="my-1">
                        <ButtonGroup Type="ButtonGroup.GroupItemType.LeftCenterRight" Value="(int)container.HorizontalAlignment" ValueChanged="(e) => container.HorizontalAlignment = (HorizontalAlignment)e" />
                    </ExpandPanel>

                    <ExpandPanel Desc="容器内组件竖直对齐" ShowSwitch="false" Expanded="true" Color="@ICONS.Colors.Gray.Light3" Class="my-1">
                        <ButtonGroup Type="ButtonGroup.GroupItemType.TopCenterBottom" Value="(int)container.VerticalAlignment" ValueChanged="(e) => container.VerticalAlignment = (VerticalAlignment)e" />
                    </ExpandPanel>
                    <ExpandPanel Desc="边距和比例" Expanded="true" Color="@ICONS.Colors.Gray.Light3" Class="my-1" ShowSwitch="false">
                        <SliderInput @bind-Value="@mContainer.Margin.Top" Name="上边距" Unit="%" />
                        <SliderInput @bind-Value="@mContainer.Margin.Bottom" Name="下边距" Unit="%" />
                        <SliderInput @bind-Value="@mContainer.Margin.Left" Name="左边距" Unit="%" />
                        <SliderInput @bind-Value="@mContainer.Margin.Right" Name="右边距" Unit="%" />
                        <SliderInput @bind-Value="@mContainer.HeightPercent" Name="高" Unit="%" />
                        <SliderInput @bind-Value="@mContainer.WidthPercent" Name="宽(0自动计算)" Unit="%" />
                    </ExpandPanel>
                    @foreach (var c_comp in mContainer.Controls)
                    {
                        <ExpandPanel Desc="@c_comp.Name" Expanded="true" ShowSwitch="false">
                            <ExpandPanel Desc="边距和比例" Expanded="true" ShowSwitch="false">
                                <SliderInput @bind-Value="@c_comp.Margin.Top" Name="上边距" Unit="%" />
                                <SliderInput @bind-Value="@c_comp.Margin.Bottom" Name="下边距" Unit="%" />
                                <SliderInput @bind-Value="@c_comp.Margin.Left" Name="左边距" Unit="%" />
                                <SliderInput @bind-Value="@c_comp.Margin.Right" Name="右边距" Unit="%" />
                                <SliderInput @bind-Value="@c_comp.Percent" Name="组件占容器比例" Unit="%" />
                            </ExpandPanel>
                            @if (c_comp is WMLine mLine)
                            {
                                <ExpandPanel Desc="分割线" Expanded="true" ShowSwitch="false">
                                    <ColorPicker Name="颜色" @bind-Color="mLine.Color" />
                                    <ExpandPanel Desc="方向" Expanded="true" ShowSwitch="false">
                                        <ButtonGroup Type="ButtonGroup.GroupItemType.HorizonVertical" Value="(int)mLine.Orientation" ValueChanged="(e) => mLine.Orientation = (Orientation)e" />
                                    </ExpandPanel>
                                    <SliderInput Name="粗细" @bind-Value="@mLine.Thickness" Unit="px" />
                                </ExpandPanel>
                            }
                            else if (c_comp is WMLogo mLogo)
                            {
                                <ExpandPanel Desc="图片" Expanded="true" ShowSwitch="false">
                                    <ExpandPanel @bind-Expanded="mLogo.White2Transparent" Desc="白底转透明像素" Class="my-1" />
                                    <ExpandPanel @bind-Expanded="mLogo.AutoSetLogo" Desc="自动识别品牌图标" />
                                    <ImageSelect ImagesBase64="@ImagesBase64" Key="@mLogo.ID" Size="40" ObjectFit="contain" SelectDefaultImage="()=> SelectImage(mLogo)" />
                                </ExpandPanel>
                            }
                            else if (c_comp is WMText mText)
                            {

                                <ExpandPanel Desc="字体" Expanded="true" ShowSwitch="false">
                                    <ColorPicker Name="颜色" @bind-Color="mText.FontColor" />
                                    <div style="display:flex;align-items:center;justify-content:space-between;" class="my-1 px-1">
                                        <Label Name="样式" />
                                        <div style="display:flex;align-items:center;justify-content:flex-end;gap:0 4px">
                                            <ToggleButton @bind-Open="@mText.IsItalic" On="@ICONS.Italic" Off="@ICONS.Italic" />
                                            <ToggleButton @bind-Open="@mText.IsBold" On="@ICONS.Bold" Off="@ICONS.Bold" />
                                        </div>
                                    </div>
                                    <ExpandPanel Desc="元数据参数" Expanded="true" ShowSwitch="false" Color="@ICONS.Colors.Gray.Light4">
                                        <div style="line-height:30px;border-bottom:1px solid #808080;height:30px;font-weight:normal;justify-content:space-between;display:flex;align-items:center;font-size:0.75rem;" class="ml-1">
                                            <div style="width:calc(100% - 80px);float:left;overflow-x:auto;white-space:nowrap">
                                                @(string.Join(" ", mText.Exifs.Select(x => x.Prefix + x.Value + x.Suffix)))
                                            </div>
                                            <IconButton Icon="@("mdi-open-in-new")" OnClick="(()=>{ wMText = mText; showExifConfig = true; })" />
                                        </div>
                                    </ExpandPanel>

                                    <ExpandPanel Desc="@("字体：" + mText.FontFamily)" Class="my-1 pa-1" ShowSwitch="false" Expanded="true" Color="@ICONS.Colors.Gray.Light4">
                                        <div style="display:flex;align-items:end;justify-content:flex-start">
                                            <MSelect ItemText="e => e"
                                                     ItemValue="u => u"
                                                     @bind-Value="mText.FontFamily"
                                                     TValue="string"
                                                     TItem="string" TItemValue="string"
                                                     Items="SkiaSharp.SKFontManager.Default.FontFamilies.ToList()"
                                                     Label="系统字体"
                                                     HideDetails="true"
                                                     Style="white-space: nowrap;" />
                                            <MButton Small Style="white-space: nowrap;" OnClick="()=>{wMText = mText; showFontConfig = true;}" Class="ml-1">
                                                <MIcon>mdi-format-font</MIcon>字体库
                                            </MButton>
                                        </div>

                                        <SliderInput @bind-Value="@mText.FontSize" Name="大小" Unit="px" />
                                    </ExpandPanel>

                                </ExpandPanel>
                                <ExpandPanel @bind-Expanded="mText.EnableBorder" Desc="文字边框" Color="@ICONS.Colors.Gray.Light3" Class="my-1">
                                    <SliderInput @bind-Value="@mText.BorderPadding" Name="内边距" Unit="px" />
                                    <SliderInput @bind-Value="@mText.BorderWidth" Name="边框宽度" Unit="px" />
                                    <SliderInput @bind-Value="@mText.BorderRadius" Name="圆角度数" Unit="px" />
                                    <ColorPicker Name="边框颜色" @bind-Color="mText.BorderColor" />
                                </ExpandPanel>
                            }
                        </ExpandPanel>
                    }
                </ExpandVisiblePanel>
            }
            else
            {

                <ExpandVisiblePanel Desc="@ctrl.Name" ShowIcon="false" Color="@ICONS.Colors.Gray.Light2" Class="pa-1 my-1" Bold="true">
                    <ExpandPanel Desc="边距和比例" Expanded="true" ShowSwitch="false" Color="@ICONS.Colors.Gray.Light3" Class="my-1">
                        <SliderInput @bind-Value="@ctrl.Margin.Top" Name="上边距" Unit="%" />
                        <SliderInput @bind-Value="@ctrl.Margin.Bottom" Name="下边距" Unit="%" />
                        <SliderInput @bind-Value="@ctrl.Margin.Left" Name="左边距" Unit="%" />
                        <SliderInput @bind-Value="@ctrl.Margin.Right" Name="右边距" Unit="%" />
                        <SliderInput @bind-Value="@ctrl.Percent" Name="组件占容器比例" Unit="%" />
                    </ExpandPanel>
                    @if (ctrl is WMLine mLine)
                    {
                        <ExpandPanel Desc="分割线" Expanded="true" ShowSwitch="false" Color="@ICONS.Colors.Gray.Light3" Class="my-1">
                            <ColorPicker Name="颜色" @bind-Color="mLine.Color" />
                            <ExpandPanel Desc="方向" Expanded="true" ShowSwitch="false">
                                <ButtonGroup Type="ButtonGroup.GroupItemType.HorizonVertical" Value="(int)mLine.Orientation" ValueChanged="(e) => mLine.Orientation = (Orientation)e" />
                            </ExpandPanel>
                            <SliderInput Name="粗细" @bind-Value="@mLine.Thickness" Unit="px" />
                        </ExpandPanel>
                    }
                    else if (ctrl is WMLogo mLogo)
                    {

                        <ExpandPanel Desc="图片" Expanded="true" ShowSwitch="false" Color="@ICONS.Colors.Gray.Light3" Class="my-1 px-1">
                            <ExpandPanel @bind-Expanded="mLogo.White2Transparent" Desc="白底转透明像素" Class="my-1" />
                            <ExpandPanel @bind-Expanded="mLogo.AutoSetLogo" Desc="自动识别品牌图标" />
                            <ImageSelect ImagesBase64="@ImagesBase64" Key="@mLogo.ID" Size="40" ObjectFit="contain" SelectDefaultImage="()=> SelectImage(mLogo)" Delete="()=>{mLogo.Path = null; ImagesBase64.Remove(mLogo.ID, out string v);}" />
                        </ExpandPanel>
                    }
                    else if (ctrl is WMText mText)
                    {
                        <ExpandPanel Desc="字体" Expanded="true" ShowSwitch="false" Color="@ICONS.Colors.Gray.Light3" Class="my-1 pa-1">
                            <ExpandPanel Desc="元数据参数" Expanded="true" ShowSwitch="false" Color="@ICONS.Colors.Gray.Light4">
                                <div style="line-height:30px;border-bottom:1px solid #808080;height:30px;font-weight:normal;justify-content:space-between;display:flex;align-items:center;font-size:0.75rem;" class="ml-1">
                                    <div style="width:calc(100% - 80px);float:left;overflow-x:auto;white-space:nowrap">
                                        @(string.Join(" ", mText.Exifs.Select(x => x.Prefix + x.Value + x.Suffix)))
                                    </div>
                                    <IconButton Icon="@("mdi-open-in-new")" OnClick="(()=>{ wMText = mText; showExifConfig = true; })" />
                                </div>
                            </ExpandPanel>
                            <ColorPicker Name="颜色" @bind-Color="mText.FontColor" />
                            <div style="display:flex;align-items:center;justify-content:space-between;" class="my-1 px-1">
                                <Label Name="样式" />
                                <div style="display:flex;align-items:center;justify-content:flex-end;gap:0 4px">
                                    <ToggleButton @bind-Open="@mText.IsItalic" On="@ICONS.Italic" Off="@ICONS.Italic" />
                                    <ToggleButton @bind-Open="@mText.IsBold" On="@ICONS.Bold" Off="@ICONS.Bold" />
                                </div>
                            </div>

                            <ExpandPanel Desc="@("字体：" + mText.FontFamily)" Class="my-1 pa-1" ShowSwitch="false" Expanded="true" Color="@ICONS.Colors.Gray.Light4">
                                <div style="display:flex;align-items:end;justify-content:flex-start">
                                    <MSelect ItemText="e => e"
                                             ItemValue="u => u"
                                             @bind-Value="mText.FontFamily"
                                             TValue="string"
                                             TItem="string"
                                             TItemValue="string"
                                             Items="SkiaSharp.SKFontManager.Default.FontFamilies.ToList()"
                                             Label="系统字体"
                                             HideDetails="true"
                                             Style="white-space: nowrap;" />
                                    <MButton Small Style="white-space: nowrap;" OnClick="()=>{wMText = mText; showFontConfig = true;}" Class="ml-1">
                                        <MIcon>mdi-format-font</MIcon>字体库
                                    </MButton>
                                </div>

                                <SliderInput @bind-Value="@mText.FontSize" Name="大小" Unit="px" />
                            </ExpandPanel>
                        </ExpandPanel>
                        <ExpandPanel @bind-Expanded="@mText.EnableBorder" Desc="文字边框" Color="@ICONS.Colors.Gray.Light3" Class="my-1">
                            <SliderInput @bind-Value="@mText.BorderPadding" Name="内边距" Unit="px" />
                            <SliderInput @bind-Value="@mText.BorderWidth" Name="边框宽度" Unit="px" />
                            <SliderInput @bind-Value="@mText.BorderRadius" Name="圆角度数" Unit="px" />
                            <ColorPicker Name="边框颜色" @bind-Color="@mText.BorderColor" />
                        </ExpandPanel>
                    }
                </ExpandVisiblePanel>
            }
        }
        @* </ExpandVisiblePanel> *@
    </ExpandVisiblePanel>
}


<MDialog ContentStyle="width:90%;height:90%;" @bind-Value="showExifConfig">
    @if (canvas != null && showExifConfig)
    {
        <ExifConfig CanvasType="@canvas.CanvasType" ContainerId2Name="@containerId2Name" mText="wMText" OnClose="()=>showExifConfig = false" />
    }
</MDialog>



<MDialog ContentStyle="width:90%;height:90%;" @bind-Value="showFontConfig">
    @if (showFontConfig)
    {
        <FontsDialog ID="@canvas.ID" OnClose="(e)=>{wMText.FontFamily = e.Key; showFontConfig = false;}" />
    }
</MDialog>
@code {
    [Parameter]
    public WMCanvas canvas { get; set; }
    [Parameter]
    public ConcurrentDictionary<string, string> ImagesBase64 { get; set; } = [];
    [Parameter]
    public EventCallback<IWMControl> SelectImageEvt { get; set; }
    [Parameter]
    public EventCallback<WMContainer> RemoveImageEvt { get; set; }
    WMText wMText;
    bool showExifConfig = false;
    Dictionary<string, string> containerId2Name
    {
        get
        {
            var dic = canvas.Children.Where(x => !x.ContainerProperties.FixImage).ToDictionary((k) => k.ID, (v) => v.Name);
            dic[canvas.ID] = canvas.Name;
            return dic.Reverse().ToDictionary();
        }
    }

    bool showFontConfig = false;


    void SelectImage(IWMControl mLogo)
    {
        if (SelectImageEvt.HasDelegate)
        {
            SelectImageEvt.InvokeAsync(mLogo);
        }
    }

    void RemoveImage(WMContainer container)
    {
        if (RemoveImageEvt.HasDelegate)
        {
            RemoveImageEvt.InvokeAsync(container);
        }
    }

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }
}
