@using Masa.Blazor
@using Watermark.Shared.Models

<MCard Flat>
    <MCard Class="pa-2" Elevation="0" Style="background:#e5e5e5;position:relative">
        @if (canvas != null && Versions.TryGetValue(canvas.ID, out int v) && v > canvas.Version)
        {
            <MChip Small Color="Color.Error" Style="position:absolute;top:10px;right:10px;cursor:pointer;" OnClick="()=>Download(canvas.ID)">ÓÐ¸üÐÂ</MChip>
        }
        <MImage Src="@Src" Style="width:100%;" Height="200" Contain />
        <div style="margin: auto;text-overflow:ellipsis;white-space:nowrap;overflow-x:hidden;color:gray" class="ma-1">
            @Name
        </div>
        <MCardActions Style="padding: 8px 0;">
            @ChildContent
        </MCardActions>
    </MCard>
</MCard>

@code {

    [Parameter]
    public string Src { get; set; }
    [Parameter]
    public string Name { get; set; }
    [Parameter]
    public WMCanvas canvas { get; set; }

    [Parameter]
    public Dictionary<string, int> Versions { get; set; } = [];
    [Parameter]
    public EventCallback<string> DownloadEvt { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }
    void Download(string id)
    {
        if (DownloadEvt.HasDelegate)
        {
            DownloadEvt.InvokeAsync(id);
        }
    }
}
