@using MudBlazor
@using Watermark.Shared.Models
@using Watermark.Win.Models
@if(fStyle != null)
{
    <MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center" Style="height:30px;">
        <MudStack Row AlignItems="AlignItems.Center">
            <MudText>样式设置</MudText>
            <MudSwitch Color="Color.Primary" @bind-Value="fStyle.Enabled" Size="Size.Small"/>
        </MudStack>
       
        @if(fStyle.Enabled)
        {
            <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined" Size="Size.Small">
                <MudToggleIconButton @bind-Toggled="fStyle.IsItalic" Icon="@Icons.Material.Filled.FormatItalic" Color="@Color.Error" Size="Size.Small"
                                     ToggledIcon="@Icons.Material.Filled.FormatItalic" ToggledColor="@Color.Primary" />
                <MudToggleIconButton @bind-Toggled="fStyle.IsBold" Icon="@Icons.Material.Filled.FormatBold" Color="@Color.Error" Size="Size.Small"
                                     ToggledIcon="@Icons.Material.Filled.FormatBold" ToggledColor="@Color.Primary" />
            </MudButtonGroup>
        }
    </MudStack>

    @if (fStyle.Enabled)
    {
        <MudStack Row>
            @* <MudTextField @bind-Value="fStyle.FontSize" Label="字体大小" Variant="Variant.Text" Margin="Margin.Dense" Class="mt-5" Style="width:80px" /> *@
            <MudColorPicker Label="颜色" ColorPickerView="ColorPickerView.Grid" @bind-Text="fStyle.FontColor" Margin="Margin.Dense"/>
            <MudSelect Label="字体" @bind-Value="fStyle.FontFamily" Style="width: 50%" Margin="Margin.Dense">
                @foreach (var pair in Fonts)
                {
                    <MudSelectItem Value="pair.Key">@pair.Key</MudSelectItem>
                }
            </MudSelect>
        </MudStack>
       
    }
}



@code {
    Dictionary<string, string> Fonts = new Dictionary<string, string>();
    protected override async Task OnInitializedAsync()
    {
        Fonts = await Task.Run(() => Global.ReadFont());
    }
    [Parameter]
    public WMFontStyle fStyle { get; set; }
}
