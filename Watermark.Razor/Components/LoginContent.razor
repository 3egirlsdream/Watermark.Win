@using Masa.Blazor
@using Masa.Blazor.Presets
@using Watermark.Win.Models
@inject IPopupService PopupService
@inject PageStackNavController NavController

<svg t="1715438014000" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4186" width="128" height="128"><path d="M742.4 835.584H443.392c-42.496 0-76.8-34.304-76.8-76.8V265.216c0-42.496 34.304-76.8 76.8-76.8H742.4c42.496 0 76.8 34.304 76.8 76.8v493.056c0 42.496-34.304 77.312-76.8 77.312zM366.592 536.064H228.864c-13.312 0-24.064-10.752-24.064-24.064s10.752-24.064 24.064-24.064h137.216v48.128z" fill="#CCDAFF" p-id="4187"></path><path d="M366.592 536.064h265.728c13.312 0 24.064-10.752 24.064-24.064s-10.752-24.064-24.064-24.064H366.592v48.128z" fill="#7A7AF9" p-id="4188"></path><path d="M614.912 529.408L512 426.496c-9.216-9.216-9.216-25.088 0-34.304 9.216-9.216 25.088-9.216 34.304 0l102.912 102.912c9.216 9.216 9.216 25.088 0 34.304-9.216 9.216-24.576 9.216-34.304 0z" fill="#7A7AF9" p-id="4189"></path><path d="M614.912 494.592L512 597.504c-9.216 9.216-9.216 25.088 0 34.304 9.216 9.216 25.088 9.216 34.304 0l102.912-102.912c9.216-9.216 9.216-25.088 0-34.304-9.216-9.216-24.576-9.216-34.304 0z" fill="#7A7AF9" p-id="4190"></path></svg>

<MTextField @bind-Value="UserName" TValue="string" Label="邮箱" Required="true" RequiredMessage="邮箱不能为空" Autofocus Class="mt-2" />
<MTextField @bind-Value="Password" TValue="string" Label="密码" Required="true" RequiredMessage="密码不能为空" Class="mt-2" Type="password" />
<MButton OnClick="LoginOK" Width="@("100%")" Class="mt-5" Elevation="0">登录</MButton>
<MButton Color="Color.Default" OnClick="OpenSignUpDialog" Class="mt-5" Elevation="0">注册</MButton>
<MButton OnClick="OpenForgotSignUpDialog" Small Color="Color.Default" Class="mt-5" Elevation="0" Text>忘记密码</MButton>

<MDialog @bind-Value="showSignUp.Show" ContentStyle="width:350px;padding:10px;">
    <SignUpContent FuncType="showSignUp.FuncType" />
</MDialog>


@code {
    [Parameter]
    public EventCallback<bool> CloseEvent { get; set; }
    [Parameter]
    public bool ShowHeader { get; set; } = true;
    string UserName { get; set; }
    string Password { get; set; }
    bool Loading = false;
    SignUpContent.SignUpParameter showSignUp = new();




    public async void LoginOK()
    {
        Loading = true;
        APIHelper helper = new APIHelper();
        var result = await helper.LoginIn(UserName, Password);
        string message = "";
        AlertTypes severity = AlertTypes.Success;

        if (result.success)
        {
            Global.CurrentUser = Global.SetUserInfo(result.data.data);
            message = "登录成功";
            severity = AlertTypes.Success;
            await Global.WriteAccount2LocalAsync(UserName, helper.GetMD5(Password));
            await CloseEvent.InvokeAsync(true);
            StateHasChanged();
        }
        else
        {
            severity = AlertTypes.Error;
            message = result.message?.content ?? result.data.Message;
        }

        Common.ShowMsg(PopupService, message, severity);
        Loading = false;
        StateHasChanged();
    }

    void OpenSignUpDialog()
    {
        if (Global.DeviceType == Shared.Enums.DeviceType.IOS || Global.DeviceType == Shared.Enums.DeviceType.Andorid)
        {
            NavController.Push("/signup/0");
            return;
        }
        showSignUp.FuncType = 0;
        showSignUp.Show = true;
        StateHasChanged();
    }

    void OpenForgotSignUpDialog()
    {
        if (Global.DeviceType == Shared.Enums.DeviceType.IOS || Global.DeviceType == Shared.Enums.DeviceType.Andorid)
        {
            NavController.Push("/signup/1");
            return;
        }

        showSignUp.FuncType = 1;
        showSignUp.Show = true;
        StateHasChanged();
    }
}
