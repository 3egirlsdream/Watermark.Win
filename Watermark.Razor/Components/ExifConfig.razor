@using Microsoft.AspNetCore.Components.Forms
@using MudBlazor
@using Watermark.Shared.Enums
@using Watermark.Win.Models
@using Microsoft.AspNetCore.Components
@using System.ComponentModel.DataAnnotations

<style>

    .ddd {
        border: 0;
        outline: 0;
        text-decoration: 2px solid underline;
        line-height: 2;
        text-underline-offset: 10px;
        display: inline-block;
        border-bottom: 1px solid;
        width: 10px;
    }

    input {
        width: fit-content;
    }
</style>

<MudDialog Style="min-width:50%; max-width:90%;background:#e5e5e5">
    <DialogContent>
        <MudPaper Class="my-2" Elevation="0" Style="white-space: nowrap; overflow-x:auto;display:flex;align-items:center;">
            <MudSelect @bind-Value="mText.BindedContainerId" Label="绑定的元数据来源图片容器" Dense="true" Style="margin:8px" ReadOnly="@(CanvasType == CanvasType.Normal)">
                @foreach (var id in ContainerId2Name)
                {
                    <MudSelectItem T="string" Value="id.Key">@id.Value</MudSelectItem>
                }
            </MudSelect>
        </MudPaper>
        <MudPaper Class="my-2" Elevation="0" Style="white-space: nowrap; overflow-x:auto">
            <MudStack Row>
                @foreach (var exif in mText.Exifs)
                {
                    <MudPaper Elevation="0" Class="pl-1 ma-2" Style="background:#ebebeb;">
                        <MudStack Row="true" Style="display:flex;align-items:center;">
                            <MudText Typo="Typo.subtitle2">@exif.GetMetaValue(exif.Value, true).Result</MudText>
                            @* <MudIconButton Variant="Variant.Text" Color="Color.Error" Icon="@Icons.Material.Filled.Delete" DisableElevation Size="Size.Small" OnClick="@(() => Delete(exif))" Style="margin-right:-12px;"/> *@
                            <MudIconButton Variant="Variant.Text" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit" DisableElevation Size="Size.Small" OnClick="@(()=>{CurrentExif = exif; detailShow = true;})" />
                        </MudStack>
                    </MudPaper>
                }
            </MudStack>
        </MudPaper>
        <MudPaper Elevation="0" Style="height:50vh;overflow-y:auto;border-bottom: 4px solid white; border-top: 4px solid white;">
            <MudStack Row="true" Style="display:flex; align-items:center;" Class="pl-1">
                <MudIcon Icon="@Icons.Material.Filled.Lightbulb" />
                <MudText Typo="Typo.overline" Style="@($"color:{Colors.Grey.Default};")"> 以下均为示例数据，不可以编辑，可以添加前后缀, 导出以图片实际元数据为准</MudText>
            </MudStack>
            <MudChipSet MultiSelection="true" Filter="true">
                @foreach (var exif in DefaultExifLists)
                {
                    @if (ExifHelper.GetName.TryGetValue(exif.Key, out string? v))
                    {
                        <MudChip Label="true" Text="@(v + $"({exif.Value})")" Default="exif.IsChecked" OnClick="(()=> Click(exif))" />
                    }
                }
            </MudChipSet>
        </MudPaper>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" Variant="Variant.Filled" Class="mx-4" FullWidth="true" OnClick="Submit" DisableElevation>Ok</MudButton>
    </DialogActions>
</MudDialog>


<MudOverlay Visible="detailShow" DarkBackground="true" Absolute="true" ZIndex="99999">
    <MudPaper Elevation="0" Width="330px;max-height:500px;overflow:hidden;">
        <div style="max-height:470px;overflow:auto;scrollbar-width:none;" class="pa-2">
            <MudPaper Elevation="25" Style="padding:8px">
                <MudTextField @bind-Value="CurrentExif.Value" Label="参数" Variant="Variant.Text" Margin="Margin.Dense" ReadOnly="true" />
                <Watermark.Razor.Components.FontStyleComp fStyle="CurrentExif.ValueStyle" />
            </MudPaper>
            <MudPaper Elevation="25" Style="padding:8px" Class="mt-1">
                <MudTextField @bind-Value="CurrentExif.Prefix" Label="前缀" Variant="Variant.Text" Margin="Margin.Dense" />
                <FontStyleComp fStyle="CurrentExif.PrefixStyle" />
            </MudPaper>
            <MudPaper Elevation="25" Style="padding:8px" Class="mt-1">
                <MudTextField @bind-Value="CurrentExif.Suffix" Label="后缀" Variant="Variant.Text" Margin="Margin.Dense" />
                <FontStyleComp fStyle="CurrentExif.SuffixStyle" />
            </MudPaper>
            <MudPaper Elevation="25" Style="padding:8px" Class="mt-1">
                <MudTextField @bind-Value="CurrentExif.RemoveString" Label="删除字符" Variant="Variant.Text" Margin="Margin.Dense" />

                @if (CurrentExif.Value.Contains(","))
                {
                    <MudSelect @bind-Value="CurrentExif.LocationType" Label="经纬度识别">
                        <MudSelectItem T="int" Value="-1">默认</MudSelectItem>
                        <MudSelectItem T="int" Value="0">@ExifHelper.GetLocation().result.address</MudSelectItem>
                        <MudSelectItem T="int" Value="1">@ExifHelper.GetLocation().result.ad_info.name</MudSelectItem>
                        <MudSelectItem T="int" Value="2">@ExifHelper.GetLocation().result.ad_info.nation</MudSelectItem>
                        <MudSelectItem T="int" Value="3">@ExifHelper.GetLocation().result.ad_info.province</MudSelectItem>
                        <MudSelectItem T="int" Value="4">@ExifHelper.GetLocation().result.ad_info.city</MudSelectItem>
                        <MudSelectItem T="int" Value="5">@ExifHelper.GetLocation().result.ad_info.district</MudSelectItem>
                        <MudSelectItem T="int" Value="6">@(ExifHelper.GetLocation().result.ad_info.province + " ● " + @ExifHelper.GetLocation().result.ad_info.city)</MudSelectItem>
                    </MudSelect>
                }
                @if (DateTime.TryParse(CurrentExif.Value, out DateTime dt))
                {
                    <MudTextField @bind-Value="CurrentExif.DateTimeFormat" Label="日期格式转换" Variant="Variant.Text" Margin="Margin.Dense" />
                    <MudCheckBox @bind-Value="CurrentExif.GanZhi">干支纪年</MudCheckBox>
                }
                <MudCheckBox @bind-Value="CurrentExif.ToLower">全部小写</MudCheckBox>
                <MudCheckBox @bind-Value="CurrentExif.ToUpper">全部大写</MudCheckBox>
            </MudPaper>
        </div>
       
        <MudButton Color="Color.Primary" Variant="Variant.Filled" DisableElevation Size="Size.Small" FullWidth OnClick="()=>detailShow = false">确定</MudButton>
    </MudPaper>
</MudOverlay>


@code {


    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }
    void Submit()
    {
        //var result = String.Join(";", ExifList.Select(c => c.prefix + "##" + c.content + "##" + c.suffix).ToArray());
        MudDialog.Close(DialogResult.Ok(mText));
    }
    [Parameter]
    public WMText mText { get; set; }
    [Parameter]
    public Dictionary<string, string> ContainerId2Name { get; set; }
    [Parameter]
    public CanvasType CanvasType { get; set; }
    //"F##4##suffix;"
    WMExifConfigInfo CurrentExif = new();
    bool detailShow = false;
    void Click(DefaultExifs exif)
    {
        exif.IsChecked = !exif.IsChecked;
        var i = new WMExifConfigInfo
            {
                Prefix = "",
                Suffix = "",
                Key = exif.Key,
                Value = exif.Value
            };
        if (exif.IsChecked)
        {
            mText.Exifs.Add(i);
        }
        else
        {
            var e = mText.Exifs.FirstOrDefault(c => c.Key == exif.Key);
            if (e != null)
            {
                mText.Exifs.Remove(e);
            }
        }
    }

    void Delete(WMExifConfigInfo exif)
    {
        var e = DefaultExifLists.FirstOrDefault(x => x.Key == exif.Key);
        if (e != null)
        {
            e.IsChecked = false;
            mText.Exifs.Remove(exif);
            StateHasChanged();
        }
    }


    class DefaultExifs
    {
        public bool IsChecked { get; set; }
        public string Key { get; set; }
        public string Value { get; set; }
    }

    List<DefaultExifs> DefaultExifLists;


    protected override void OnInitialized()
    {
        DefaultExifLists = new List<DefaultExifs>();
        foreach (var pair in ExifHelper.DefaultMeta)
        {
            var de = new DefaultExifs
                {
                    IsChecked = false,
                    Key = pair.Key,
                    Value = pair.Value
                };
            if (mText.Exifs != null && mText.Exifs.Any(c => c.Key == pair.Key)) de.IsChecked = true;
            DefaultExifLists.Add(de);
        }
        if (string.IsNullOrEmpty(mText.BindedContainerId) && ContainerId2Name.Count > 0)
        {
            mText.BindedContainerId = ContainerId2Name.FirstOrDefault().Key;
        }
    }

    private void oninput(ChangeEventArgs e)
    {
        //   exifInfo.prefix = e.Value?.ToString() ?? "";
    }

}