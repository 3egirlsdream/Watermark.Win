@using Microsoft.AspNetCore.Components.Forms
@using MudBlazor
@using Watermark.Win.Models
@using Microsoft.AspNetCore.Components
@using System.ComponentModel.DataAnnotations

<style>

	.ddd {
		border: 0;
		outline: 0;
		text-decoration: 2px solid underline;
		line-height: 2;
		text-underline-offset: 10px;
		display: inline-block;
		border-bottom: 1px solid;
		width: 10px;
	}

	input {
		width: fit-content;
	}
</style>

<MudDialog Style="min-width:50%; max-width:90%;">
	<DialogContent>
		<MudPaper Class="my-2" Elevation="2" Style="white-space: nowrap; overflow-x:auto">
			<MudStack Row>
				@foreach (var exif in Exifs)
				{
					<MudPaper Elevation="0" Class="pl-1 ma-2" Style="background:#ebebeb;">
						<MudStack Row="true" Style="display:flex;align-items:center;">
							<MudText Typo="Typo.subtitle2">@exif.GetValue(exif.Value, true).Result</MudText>
							<MudIconButton Variant="Variant.Filled" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit" DisableElevation Size="Size.Small" OnClick="@(()=>{CurrentExif = exif; detailShow = true;})" />
						</MudStack>
					</MudPaper>
				}
			</MudStack>
		</MudPaper>
		<MudPaper Elevation="2" Style="height:50vh;overflow-y:auto;">
			<MudStack Row="true" Style="display:flex; align-items:center;" Class="pl-1">
				<MudIcon Icon="@Icons.Material.Filled.Lightbulb" />
				<MudText Typo="Typo.overline" Style="@($"color:{Colors.Grey.Default};")"> 以下均为示例数据，不可以编辑，可以添加前后缀, 导出以图片实际元数据为准</MudText>
			</MudStack>
			<MudChipSet MultiSelection="true" Filter="true">
				@foreach (var exif in DefaultExifLists)
				{
					@if (ExifHelper.GetName.TryGetValue(exif.Key, out string v))
					{
						<MudChip Label="true" Text="@(v + $"({exif.Value})")" Default="@exif.IsChecked" OnClick="(()=> Click(exif))" />
					}

				}
			</MudChipSet>
		</MudPaper>
	</DialogContent>
	<DialogActions>
		<MudButton Color="Color.Primary" Variant="Variant.Filled" Class="mx-4" FullWidth="true" OnClick="Submit">Ok</MudButton>
	</DialogActions>
</MudDialog>


<MudOverlay Visible="detailShow" DarkBackground="true" Absolute="true" ZIndex="99999">
	<MudPaper Elevation="0" Class="pa-2" Width="330px">
		<MudTextField @bind-Value="CurrentExif.Value" Label="参数" Variant="Variant.Text" Margin="Margin.Dense" ReadOnly="true" />
		<MudTextField @bind-Value="CurrentExif.Prefix" Label="前缀" Variant="Variant.Text" Margin="Margin.Dense"  />
		<MudTextField @bind-Value="CurrentExif.Suffix" Label="后缀" Variant="Variant.Text" Margin="Margin.Dense" />
		<MudTextField @bind-Value="CurrentExif.RemoveString" Label="删除字符" Variant="Variant.Text" Margin="Margin.Dense" />

		@if (CurrentExif.Value.Contains(","))
		{
			<MudSelect @bind-Value="CurrentExif.LocationType" Label="经纬度识别">
				<MudSelectItem T="int" Value="-1">默认</MudSelectItem>
				<MudSelectItem T="int" Value="0">@ExifHelper.GetLocation().result.address</MudSelectItem>
				<MudSelectItem T="int" Value="1">@ExifHelper.GetLocation().result.ad_info.name</MudSelectItem>
				<MudSelectItem T="int" Value="2">@ExifHelper.GetLocation().result.ad_info.nation</MudSelectItem>
				<MudSelectItem T="int" Value="3">@ExifHelper.GetLocation().result.ad_info.province</MudSelectItem>
				<MudSelectItem T="int" Value="4">@ExifHelper.GetLocation().result.ad_info.city</MudSelectItem>
				<MudSelectItem T="int" Value="5">@ExifHelper.GetLocation().result.ad_info.district</MudSelectItem>
			</MudSelect>
		}
		@if(DateTime.TryParse(CurrentExif.Value, out DateTime dt))
		{
			<MudTextField @bind-Value="CurrentExif.DateTimeFormat" Label="日期格式转换" Variant="Variant.Text" Margin="Margin.Dense" />
			<MudCheckBox @bind-Value="CurrentExif.GanZhi">干支纪年</MudCheckBox>
		}
		<MudCheckBox @bind-Value="CurrentExif.ToLower">全部小写</MudCheckBox>
		<MudCheckBox @bind-Value="CurrentExif.ToUpper">全部大写</MudCheckBox>
		<MudButton Color="Color.Primary" Variant="Variant.Filled" DisableElevation Size="Size.Small" FullWidth Class="mt-2" OnClick="()=>detailShow = false">确定</MudButton>
	</MudPaper>
</MudOverlay>


@code {


	[CascadingParameter]
	MudDialogInstance MudDialog { get; set; }
	void Submit()
	{
		//var result = String.Join(";", ExifList.Select(c => c.prefix + "##" + c.content + "##" + c.suffix).ToArray());
		MudDialog.Close(DialogResult.Ok(Exifs));
	}
	[Parameter]
	public List<WMExifConfigInfo> Exifs { get; set; } = [];
	//"F##4##suffix;"
	WMExifConfigInfo CurrentExif = new();
	bool detailShow = false;
	void Click(DefaultExifs exif)
	{
		exif.IsChecked = !exif.IsChecked;
		var i = new WMExifConfigInfo
			{
				Prefix = "",
				Suffix = "",
				Key = exif.Key,
				Value = exif.Value
			};
		if (exif.IsChecked)
		{
			Exifs.Add(i);
		}
		else
		{
			var e = Exifs.FirstOrDefault(c => c.Key == exif.Key);
			if (e != null)
			{
				Exifs.Remove(e);
			}
		}
	}


	class DefaultExifs
	{
		public bool IsChecked { get; set; }
		public string Key { get; set; }
		public string Value { get; set; }
	}

	List<DefaultExifs> DefaultExifLists;


	protected override void OnInitialized()
	{
		DefaultExifLists = new List<DefaultExifs>();
		foreach (var pair in ExifHelper.DefaultMeta)
		{
			var de = new DefaultExifs
				{
					IsChecked = false,
					Key = pair.Key,
					Value = pair.Value
				};
			if (Exifs != null && Exifs.Any(c => c.Key == pair.Key)) de.IsChecked = true;
			DefaultExifLists.Add(de);
		}

	}

	private void oninput(ChangeEventArgs e)
	{
		//   exifInfo.prefix = e.Value?.ToString() ?? "";
	}

}