@using System.Collections.Concurrent
@using Masa.Blazor
@using Watermark.Shared.Models

<style>
    .image-select {
        border-radius: 5px;
        border: 1px dashed lightgrey;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 2px auto
    }
</style>

@if (ImagesBase64.TryGetValue(Key, out string? src) && !string.IsNullOrEmpty(src))
{
    <div style="display:flex;justify-content:flex-end;align-items:center;">
        <IconButton Icon="@ICONS.Delete" Text="true"/>
    </div>
    <MImage Height="@Size" Style="object-fit:cover" Src="@src" @onclick="SelectDefaultImage" Class="mt-1"/>
}
else
{
    <div style="@($"width:{Size}px;height:{Size}px;")" @onclick="SelectDefaultImage" class="image-select">
        <MIcon Size="@("8rem")" Style="color:lightgrey">mdi-image-plus</MIcon>
    </div>
}

@code {
    [Parameter]
    public ConcurrentDictionary<string, string> ImagesBase64 { get; set; } = [];
    [Parameter]
    public string Key { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> SelectDefaultImage { get; set; }

    [Parameter]
    public EventCallback Delete { get; set; }
    [Parameter]
    public int Size { get; set; } = 250;
}
