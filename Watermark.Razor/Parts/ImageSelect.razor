@using System.Collections.Concurrent
@using Masa.Blazor
@using Watermark.Shared.Models

<style>
    .image-select {
        border-radius: 5px;
        border: 1px dashed lightgrey;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 2px auto
    }

    image-select:hover
    img:hover {
        cursor:pointer;
    }
</style>

<div style="height:100%;width:100%;display:flex;flex-direction:column;justify-content:center">
    @if (ImagesBase64.TryGetValue(Key, out string? src) && !string.IsNullOrEmpty(src))
    {
        <div style="display:flex;justify-content:flex-end;align-items:center;">
            <IconButton Icon="@ICONS.Delete" Text="true" OnClick="Del" />
        </div>
        <img style="@($"object-fit:{ObjectFit};margin:auto;width:{Size}px;height:{Size}px;")" src="@src" @onclick="SelectDefaultImage" class="mt-1" />
    }
    else
    {
        <div style="@($"width:{Size}px;height:{Size}px;")" @onclick="SelectDefaultImage" class="image-select">
            <MIcon Size="@($"{Size / 2}px")" Style="color:lightgrey">mdi-image-plus</MIcon>
        </div>
    }
</div>


@code {
    [Parameter]
    public ConcurrentDictionary<string, string> ImagesBase64 { get; set; } = [];
    [Parameter]
    public string Key { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> SelectDefaultImage { get; set; }

    [Parameter]
    public EventCallback Delete { get; set; }
    [Parameter]
    public int Size { get; set; } = 250;
    [Parameter]
    public string ObjectFit { get; set; } = "cover";

    void Del()
    {
        if(Delete.HasDelegate)
        {
            Delete.InvokeAsync();
        }
    }
}
