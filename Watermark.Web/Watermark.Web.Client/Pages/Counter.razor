@page "/counter"
@rendermode InteractiveWebAssembly
@using MudBlazor
@using SkiaSharp
@using System.Text
@using Watermark.Win.Models

<PageTitle>Home</PageTitle>
@if (!string.IsNullOrEmpty(src))
{
    <MudImage Src="@src" Width="200" ObjectFit="ObjectFit.Contain" />
}
<p>@msg</p>
Welcome to your new app.
<MudFileUpload T="IReadOnlyList<IBrowserFile>" FilesChanged="UploadFiles" Accept=".png, .jpg">
    <ButtonTemplate>
        <MudButton HtmlTag="label"
                   Variant="Variant.Filled"
                   Color="MudBlazor.Color.Primary"
                   StartIcon="@Icons.Material.Filled.CloudUpload"
                   for="@context.Id">
            选择照片
        </MudButton>
    </ButtonTemplate>
</MudFileUpload>
<MudButton Variant="Variant.Filled" OnClick="Click">点击</MudButton>
@code
{
    string src = "";
    string msg = "";
    WMCanvas canvas;
    private async void UploadFiles(IReadOnlyList<IBrowserFile> files)
    {

        foreach (var file in files)
        {
            try
            {
                MemoryStream ms = new MemoryStream();
                await file.OpenReadStream(100000000).CopyToAsync(ms);
                canvas = new WMCanvas();
                var bitmap = SKBitmap.Decode(ms.ToArray());
                WatermarkHelper helper = new WatermarkHelper();
                var ziped = new WMZipedTemplate
                {
                    WatermarkId = canvas.ID,
                    WMCanvas = canvas,
                    Bitmap = bitmap
                };
                StateHasChanged();
            }
            catch (Exception ex)
            {

            }
        }
        //TODO upload the files to the server
    }

    async void Click()
    {
        // HttpClient httpClient = new HttpClient();
        // string url = "https://localhost:44389/api/Auth/GetToken?name=cxk&pwd=123455";
        // var data = await httpClient.GetByteArrayAsync(url);
        // msg = Encoding.UTF8.GetString(data);
        try
        {
            var str = $"http://thankful.top:4396/api/Watermark/GetWatermarks?userId=&start=0&length=0&type=timeAsc";
            HttpClient httpClient = new HttpClient();
            var data = await httpClient.GetByteArrayAsync(str);
            msg = Encoding.UTF8.GetString(data);

            // StateHasChanged();
            APIHelper helper = new APIHelper();
            var ws = await helper.GetWatermarks("", 0, 10);
            if (ws != null && ws.Count > 0)
            {
                var result = await helper.ExtractZip(ws[0].WatermarkId);
                var wh = new WatermarkHelper();
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            msg = ex.Message.ToString();
            StateHasChanged();
        }
    }

}
