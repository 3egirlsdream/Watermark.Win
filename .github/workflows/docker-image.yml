name: Docker Image CI

on:
  push:
    branches: [ "master" ]
env:
  IMAGE_NAME: watermarkweb
  
jobs:

  push:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file Watermark.Web/Watermark.Web/Dockerfile --tag $IMAGE_NAME
    - name: Log into registry
      run: echo "${{ secrets.ACCESS_TOKEN }}" | docker login -u xulezuo --password-stdin
    - name: push image
      run: |
        # 拼接镜像 id，这个镜像 id 就是在使用 docker 镜像时 pull 后面的名字。
        IMAGE_ID=xulezuo/$IMAGE_NAME
        # 将所有的大写字母转为小写
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # 从 GitHub.ref 中取出版本
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # 从 tag 名字中替换 v 字符
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        # 设置镜像 id 和版本号
        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        # 进行 push
        docker push $IMAGE_ID:$VERSION

    - name: Deploy 2 server
      uses: appleboy/ssh-action@master # 使用ssh链接服务器
      with:
       host: '42.194.131.197'
       username: 'root'
       password: ${{ secrets.PASSWORD }}
       port: 22
       script: | # 执行命令（运行到服务器）cd：要确保服务器有这个目录； wget：下载上一步的release到服务器； tar：解压； 安装依赖；启动服务
        docker stop $IMAGE_NAME
        docker rm $IMAGE_NAME
        docker pull xulezuo/$IMAGE_NAME
        docker run --name $IMAGE_NAME -dit -p 80:8080 -d xulezuo/$IMAGE_NAME
