@using Watermark.Win.Models
@inject ISnackbar Snackbar

<MudDialog>
	<DialogContent>
		<MudForm Style="text-align:center">
			<MudToolBar Style="height:40px;padding-left:2px;margin-left:-24px;">
				<MudIconButton Icon="@Icons.Material.Filled.KeyboardArrowLeft" OnClick="()=>{ MudDialog.Close(false);}" />
			</MudToolBar>
			<svg t="1715438014000" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4186" width="128" height="128"><path d="M742.4 835.584H443.392c-42.496 0-76.8-34.304-76.8-76.8V265.216c0-42.496 34.304-76.8 76.8-76.8H742.4c42.496 0 76.8 34.304 76.8 76.8v493.056c0 42.496-34.304 77.312-76.8 77.312zM366.592 536.064H228.864c-13.312 0-24.064-10.752-24.064-24.064s10.752-24.064 24.064-24.064h137.216v48.128z" fill="#CCDAFF" p-id="4187"></path><path d="M366.592 536.064h265.728c13.312 0 24.064-10.752 24.064-24.064s-10.752-24.064-24.064-24.064H366.592v48.128z" fill="#7A7AF9" p-id="4188"></path><path d="M614.912 529.408L512 426.496c-9.216-9.216-9.216-25.088 0-34.304 9.216-9.216 25.088-9.216 34.304 0l102.912 102.912c9.216 9.216 9.216 25.088 0 34.304-9.216 9.216-24.576 9.216-34.304 0z" fill="#7A7AF9" p-id="4189"></path><path d="M614.912 494.592L512 597.504c-9.216 9.216-9.216 25.088 0 34.304 9.216 9.216 25.088 9.216 34.304 0l102.912-102.912c9.216-9.216 9.216-25.088 0-34.304-9.216-9.216-24.576-9.216-34.304 0z" fill="#7A7AF9" p-id="4190"></path></svg>
			<MudTextField @bind-Value="UserName" T="string" Label="邮箱" Required="true" RequiredError="邮箱不能为空" AutoFocus Class="mt-10" />
			<MudTextField @bind-Value="Password" T="string" Label="密码" Required="true" RequiredError="密码不能为空" Class="mt-5" InputType="InputType.Password" />
			<MudButton Variant="Variant.Filled" OnClick="LoginOK" FullWidth Class="mt-5" DisableElevation>登录</MudButton>
			<MudButton Variant="Variant.Filled" FullWidth Color="Color.Default" OnClick="OpenSignUpDialog" Class="mt-5" DisableElevation>注册</MudButton>
			<MudButton Variant="Variant.Text" OnClick="OpenForgotSignUpDialog" Size="Size.Small" Color="Color.Default" Class="mt-5">忘记密码</MudButton>
		</MudForm>


	</DialogContent>
	<DialogActions>
	</DialogActions>
</MudDialog>




@code {
	[Inject]
	private IDialogService DialogService { get; set; }
	[CascadingParameter]
	MudDialogInstance MudDialog { get; set; }

	string UserName { get; set; }
	string Password { get; set; }
	bool Loading = false;




	public async void LoginOK()
	{
		Loading = true;
		APIHelper helper = new APIHelper();
		var result = await helper.LoginIn(UserName, Password);
		string message = "";
		Severity severity = Severity.Success;
		Snackbar.Clear();
		Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;

		if (result.success)
		{
			Global.CurrentUser = Global.SetUserInfo(result.data.data);
			message = "登录成功";
			severity = Severity.Success;
			await Global.WriteAccount2LocalAsync(UserName, helper.GetMD5(Password));
			MudDialog.Close(true);
			StateHasChanged();
		}
		else
		{
			severity = Severity.Error;
			message = result.message?.content ?? result.data.Message;
		}

		Snackbar.Add(message, severity, config =>
		{
			config.ShowCloseIcon = false;
		});
		Loading = false;
		StateHasChanged();
	}

	async void OpenSignUpDialog()
	{
		DialogOptions topCenter = new DialogOptions() { NoHeader = true, FullScreen = true };
		var param = new DialogParameters<SignUpDialog>();
		param.Add(x => x.FuncType, 0);
		var rst = DialogService.Show<SignUpDialog>("", param, topCenter);
		var dialogResult = await rst.Result;
		if (!dialogResult.Canceled && dialogResult.Data.Equals(true))
		{
			StateHasChanged();
			MudDialog.Close(true);
		}
	}
	async void OpenForgotSignUpDialog()
	{
		DialogOptions topCenter = new DialogOptions() { NoHeader = true, FullScreen = true };
		var param = new DialogParameters<SignUpDialog>();
		param.Add(x => x.FuncType, 1);
		var rst = DialogService.Show<SignUpDialog>("", param, topCenter);
		var dialogResult = await rst.Result;
		if (!dialogResult.Canceled && dialogResult.Data.Equals(true))
		{
			StateHasChanged();
			MudDialog.Close(true);
		}
	}
}
